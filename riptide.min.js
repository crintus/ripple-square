!function(e,t){var i=function(i,l){this.element=i,this.$element=t(i),this.options=l,this.context={grid:"",ripple:"",blocks:""},this.grid=[],this.radius=0,this.rectanglePosX=0,this.rectanglePosY=0,this.ripplePosX=0,this.ripplePosY=0,this.requestAnimationFrame=e.requestAnimationFrame||e.mozRequestAnimationFrame||e.webkitRequestAnimationFrame||e.msRequestAnimationFrame,self=this};i.prototype.defaults={canvasLayoutClasses:{grid:"grid",ripple:"ripple",blocks:"blocks"},canvasFullSize:!1,canvasWidth:300,canvasHeight:300,canvasStyle:"border:1px solid #D3D3D3;",gridStrokeStyle:"#D3D3D3",gridLineWidth:1,blockWidth:10,blockHeight:10,blockFillStyle:"#578c22",blockStrokeStyle:"#578c22",blockLineWidth:1,blockType:"fill",blockExcludeGridLines:!0,blockProbability:90,rippleStyle:"rgba(0,0,0,0.0)",rippleSpeed:1,tasteTheRainbow:!1},i.prototype.init=function(){self.config=t.extend(!0,{},self.defaults,self.options),self.generateCanvas()},i.prototype.generateCanvas=function(){var e=1;self.config.canvasFullSize&&(self.config.canvasWidth=self.$element.width(),self.config.canvasHeight=self.$element.height());for(layout in self.config.canvasLayoutClasses)t('<canvas id="'+layout+'"></canvas>').attr({width:self.config.canvasWidth,height:self.config.canvasHeight,style:self.config.canvasStyle}).css({position:"absolute","z-index":e++}).appendTo(this.$element),self.context[layout]=document.getElementById(layout).getContext("2d");self.drawGrid()},i.prototype.drawGrid=function(){for(this.complete=!1;self.rectanglePosY<self.config.canvasHeight;){for(;self.rectanglePosX<self.config.canvasWidth;)self.context.grid.rect(self.rectanglePosX,self.rectanglePosY,self.config.blockWidth,self.config.blockHeight),self.grid.push({x:self.rectanglePosX,y:self.rectanglePosY,w:self.config.blockWidth,h:self.config.blockHeight,active:!1}),self.rectanglePosX=self.rectanglePosX+self.config.blockWidth;self.rectanglePosX=0,self.rectanglePosY=self.rectanglePosY+self.config.blockHeight}self.context.grid.strokeStyle=self.config.gridStrokeStyle,self.context.grid.lineWidth=self.config.gridLineWidth,self.context.grid.stroke(),self.calcRipplePos(),self.drawRipple()},i.prototype.calcRipplePos=function(){Math.random()>.5?(self.ripplePosX=self.config.canvasWidth-self.config.canvasWidth*Math.random()/3,self.ripplePosY=self.config.canvasHeight-self.config.canvasHeight*Math.random()):(self.ripplePosX=0+self.config.canvasWidth*Math.random()/3,self.ripplePosY=0+self.config.canvasHeight*Math.random())},i.prototype.drawRipple=function(){self.context.ripple.clearRect(0,0,self.config.canvasWidth,self.config.canvasHeight),self.context.ripple.beginPath(),self.context.ripple.arc(self.ripplePosX,self.ripplePosY,self.radius,0,2*Math.PI,!1),self.context.ripple.closePath(),self.context.ripple.strokeStyle=self.config.rippleStyle,self.context.ripple.stroke(),self.collisionCheck(),self.radius+=self.config.rippleSpeed,(self.radius/1.8>self.config.canvasWidth||self.radius/1.8>self.config.canvasHeight)&&(self.radius=0,self.clearActiveRectangles(),self.calcRipplePos(),self.context.blocks.clearRect(0,0,self.config.canvasWidth,self.config.canvasHeight)),requestAnimationFrame(self.drawRipple)},i.prototype.drawBlock=function(e){return self.config.tasteTheRainbow?self.context.blocks.fillStyle=self.tasteTheRainbow():self.context.blocks.fillStyle=self.config.blockFillStyle,"stroke"==self.config.blockType?(void 0!=self.options.gridLineWidth&&void 0==self.options.blocksLineWidth&&(self.config.blocksLineWidth=self.options.gridLineWidth),self.context.blocks.lineWidth=self.config.blocksLineWidth,self.context.blocks.strokeStyle=self.config.blockStrokeStyle,void self.context.blocks.strokeRect(e.x,e.y,e.w,e.h)):self.config.blockExcludeGridLines?void self.context.blocks.fillRect(e.x+self.config.gridLineWidth/2,e.y+self.config.gridLineWidth/2,e.w-self.config.gridLineWidth,e.h-self.config.gridLineWidth):void self.context.blocks.fillRect(e.x,e.y,e.w,e.h)},i.prototype.tasteTheRainbow=function(){for(var e="#",t="ABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789",i=0;6>i;i++)e+=t.charAt(Math.floor(Math.random()*t.length));return e},i.prototype.collisionCheck=function(){var e,i,l;t.each(self.grid,function(t,s){e=Math.pow(Math.floor(s.x)-Math.floor(self.ripplePosX),2),i=Math.pow(Math.floor(s.y)-Math.floor(self.ripplePosY),2),l=Math.sqrt(e+i),!s.active&&self.radius>l&&100*Math.random()>self.config.blockProbability&&(self.drawBlock(s),self.grid[t].active=!0)})},i.prototype.clearActiveRectangles=function(){t.each(self.grid,function(e,t){self.grid[e].active=!1})},t.fn.riptide=function(e){return this.each(function(){new i(this,e).init()})},e.Riptide=i}(window,jQuery);